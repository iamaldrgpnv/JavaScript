"use strict";
// Задача №1
let titleElems = document.querySelectorAll(".article p:first-child"); // коллекция элементов
for (let title of titleElems) {
	title.addEventListener("click", openDescription);
}
function openDescription() {
	this.nextElementSibling.classList.toggle("open");
	for (let title of titleElems) {
		if (title != this) {
			title.nextElementSibling.classList.remove("open");
		}
	}
}

// Коллекция
// 1. QueryselectorAll передает коллекцию элементов в массиве
// 2. Колллекция неизменна: нельзя добавить элементы, удалить элементы, коллекции нельзя добавить стиль или класс
// 3. Обратиться к элементу коллекции мы можем
// 4. На каждой итерации в переменную elem копируется элемент коллекции
// 5. Array.from(titleElems) - достаём массив из колллекции (делаем явным массив)

// Обработчик событий
// Обработчик событий может быть только в js
// 1. Элементу можно вывать метод addEventListener для добавления обработчика событий
// 2. У массивов есть методы, т.к. они объекты, каждый элемент HTML для js - объект
// 3. addEventListener(1. когда на элементе произойдет событие... 2. должны произойти действия (функция)...)
// 4. addEventListener(1. аргумент - название события 2. аргумент ссылка на функцию или метод)
// 5. Функция будет вызвана только тогда, когда будет совешено событие 
// 6. this всегда будет элементом, на который был добавлен обработчик события. контекст - сам элемент
// 7. addEventListener передает контекст в функцию
// 8. [элемент html].его следующий элемент - .nextElementSibling - добавление метода для вызова следующего элемента
// 9. Метод toggle(добавляет и удаляет класс, который прописан здесь же) - переключатель

// Про атрибут data-present
// data-* остается неизменной (data- и всё что угодно)
// Атрибут data-* существует, как name, class,  
// используется для передачи пользовательских данных из HTML в JS
// Использууется, когда нужно присвоить дополнительную информацию об элементе
// Собственную дополнительную информацию
// Как получать на js значение атрибута data-*
// Идет обрщение к элементу, ставим точку
// элемент.dataset.present(названиеData)
// при клике на present_container вызывается функция showPresent
// В функцию ВСЕГДА передается объект с информацией о событии
// event - объект с информацией о событии
// Undefined преабразуется в false
// Значение преобразуется в true (непустая строка превращается в true)
